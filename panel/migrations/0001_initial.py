# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-10-11 17:38
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AttachmentsAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('attached_file', models.CharField(blank=True, max_length=500, null=True)),
                ('is_deprecated', models.BooleanField()),
                ('description', models.TextField()),
                ('order', models.IntegerField()),
                ('name', models.CharField(max_length=500)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('sha1', models.CharField(max_length=40)),
            ],
            options={
                'managed': False,
                'db_table': 'attachments_attachment',
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_group',
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'auth_group_permissions',
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_permission',
            },
        ),
        migrations.CreateModel(
            name='CustomAttributesEpiccustomattribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField()),
                ('type', models.CharField(max_length=16)),
                ('order', models.BigIntegerField()),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'custom_attributes_epiccustomattribute',
            },
        ),
        migrations.CreateModel(
            name='CustomAttributesEpiccustomattributesvalues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField()),
                ('attributes_values', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'custom_attributes_epiccustomattributesvalues',
            },
        ),
        migrations.CreateModel(
            name='CustomAttributesIssuecustomattribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField()),
                ('order', models.BigIntegerField()),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('type', models.CharField(max_length=16)),
            ],
            options={
                'managed': False,
                'db_table': 'custom_attributes_issuecustomattribute',
            },
        ),
        migrations.CreateModel(
            name='CustomAttributesIssuecustomattributesvalues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField()),
                ('attributes_values', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'custom_attributes_issuecustomattributesvalues',
            },
        ),
        migrations.CreateModel(
            name='CustomAttributesTaskcustomattribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField()),
                ('order', models.BigIntegerField()),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('type', models.CharField(max_length=16)),
            ],
            options={
                'managed': False,
                'db_table': 'custom_attributes_taskcustomattribute',
            },
        ),
        migrations.CreateModel(
            name='CustomAttributesTaskcustomattributesvalues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField()),
                ('attributes_values', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'custom_attributes_taskcustomattributesvalues',
            },
        ),
        migrations.CreateModel(
            name='CustomAttributesUserstorycustomattribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField()),
                ('order', models.BigIntegerField()),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('type', models.CharField(max_length=16)),
            ],
            options={
                'managed': False,
                'db_table': 'custom_attributes_userstorycustomattribute',
            },
        ),
        migrations.CreateModel(
            name='CustomAttributesUserstorycustomattributesvalues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField()),
                ('attributes_values', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'custom_attributes_userstorycustomattributesvalues',
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_admin_log',
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'django_content_type',
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_migrations',
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_session',
            },
        ),
        migrations.CreateModel(
            name='DjmailMessage',
            fields=[
                ('uuid', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('from_email', models.CharField(max_length=1024)),
                ('to_email', models.TextField()),
                ('body_text', models.TextField()),
                ('body_html', models.TextField()),
                ('subject', models.CharField(max_length=1024)),
                ('data', models.TextField()),
                ('retry_count', models.SmallIntegerField()),
                ('status', models.SmallIntegerField()),
                ('priority', models.SmallIntegerField()),
                ('created_at', models.DateTimeField()),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('exception', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'djmail_message',
            },
        ),
        migrations.CreateModel(
            name='EasyThumbnailsSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_hash', models.CharField(max_length=40)),
                ('name', models.CharField(max_length=255)),
                ('modified', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'easy_thumbnails_source',
            },
        ),
        migrations.CreateModel(
            name='EasyThumbnailsThumbnail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_hash', models.CharField(max_length=40)),
                ('name', models.CharField(max_length=255)),
                ('modified', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'easy_thumbnails_thumbnail',
            },
        ),
        migrations.CreateModel(
            name='EasyThumbnailsThumbnaildimensions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'easy_thumbnails_thumbnaildimensions',
            },
        ),
        migrations.CreateModel(
            name='EpicsEpic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('is_blocked', models.BooleanField()),
                ('blocked_note', models.TextField()),
                ('ref', models.BigIntegerField(blank=True, null=True)),
                ('epics_order', models.BigIntegerField()),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('subject', models.TextField()),
                ('description', models.TextField()),
                ('client_requirement', models.BooleanField()),
                ('team_requirement', models.BooleanField()),
                ('color', models.CharField(max_length=32)),
            ],
            options={
                'managed': False,
                'db_table': 'epics_epic',
            },
        ),
        migrations.CreateModel(
            name='EpicsRelateduserstory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.BigIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'epics_relateduserstory',
            },
        ),
        migrations.CreateModel(
            name='ExternalAppsApplication',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('icon_url', models.TextField(blank=True, null=True)),
                ('web', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('next_url', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'external_apps_application',
            },
        ),
        migrations.CreateModel(
            name='ExternalAppsApplicationtoken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_code', models.CharField(blank=True, max_length=255, null=True)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'external_apps_applicationtoken',
            },
        ),
        migrations.CreateModel(
            name='FeedbackFeedbackentry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=256)),
                ('email', models.CharField(max_length=255)),
                ('comment', models.TextField()),
                ('created_date', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'feedback_feedbackentry',
            },
        ),
        migrations.CreateModel(
            name='HistoryHistoryentry',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('user', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('type', models.SmallIntegerField(blank=True, null=True)),
                ('is_snapshot', models.NullBooleanField()),
                ('key', models.CharField(blank=True, max_length=255, null=True)),
                ('diff', models.TextField(blank=True, null=True)),
                ('snapshot', models.TextField(blank=True, null=True)),
                ('values', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('comment_html', models.TextField(blank=True, null=True)),
                ('delete_comment_date', models.DateTimeField(blank=True, null=True)),
                ('delete_comment_user', models.TextField(blank=True, null=True)),
                ('is_hidden', models.NullBooleanField()),
                ('comment_versions', models.TextField(blank=True, null=True)),
                ('edit_comment_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'history_historyentry',
            },
        ),
        migrations.CreateModel(
            name='IssuesIssue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('is_blocked', models.BooleanField()),
                ('blocked_note', models.TextField()),
                ('ref', models.BigIntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('finished_date', models.DateTimeField(blank=True, null=True)),
                ('subject', models.TextField()),
                ('description', models.TextField()),
                ('external_reference', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'issues_issue',
            },
        ),
        migrations.CreateModel(
            name='LikesLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField()),
                ('created_date', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'likes_like',
            },
        ),
        migrations.CreateModel(
            name='MilestonesMilestone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.CharField(max_length=250)),
                ('estimated_start', models.DateField()),
                ('estimated_finish', models.DateField()),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('closed', models.BooleanField()),
                ('disponibility', models.FloatField(blank=True, null=True)),
                ('order', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'milestones_milestone',
            },
        ),
        migrations.CreateModel(
            name='NotificationsHistorychangenotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255)),
                ('created_datetime', models.DateTimeField()),
                ('updated_datetime', models.DateTimeField()),
                ('history_type', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'notifications_historychangenotification',
            },
        ),
        migrations.CreateModel(
            name='NotificationsHistorychangenotificationHistoryEntries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'notifications_historychangenotification_history_entries',
            },
        ),
        migrations.CreateModel(
            name='NotificationsHistorychangenotificationNotifyUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'notifications_historychangenotification_notify_users',
            },
        ),
        migrations.CreateModel(
            name='NotificationsNotifypolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notify_level', models.SmallIntegerField()),
                ('created_at', models.DateTimeField()),
                ('modified_at', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'notifications_notifypolicy',
            },
        ),
        migrations.CreateModel(
            name='NotificationsWatched',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField()),
                ('created_date', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'notifications_watched',
            },
        ),
        migrations.CreateModel(
            name='ProjectsEpicstatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(max_length=255)),
                ('order', models.IntegerField()),
                ('is_closed', models.BooleanField()),
                ('color', models.CharField(max_length=20)),
            ],
            options={
                'managed': False,
                'db_table': 'projects_epicstatus',
            },
        ),
        migrations.CreateModel(
            name='ProjectsIssuestatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('order', models.IntegerField()),
                ('is_closed', models.BooleanField()),
                ('color', models.CharField(max_length=20)),
                ('slug', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'projects_issuestatus',
            },
        ),
        migrations.CreateModel(
            name='ProjectsIssuetype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('order', models.IntegerField()),
                ('color', models.CharField(max_length=20)),
            ],
            options={
                'managed': False,
                'db_table': 'projects_issuetype',
            },
        ),
        migrations.CreateModel(
            name='ProjectsMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_admin', models.BooleanField()),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('token', models.CharField(blank=True, max_length=60, null=True)),
                ('invitation_extra_text', models.TextField(blank=True, null=True)),
                ('user_order', models.BigIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'projects_membership',
            },
        ),
        migrations.CreateModel(
            name='ProjectsPoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('order', models.IntegerField()),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'projects_points',
            },
        ),
        migrations.CreateModel(
            name='ProjectsPriority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('order', models.IntegerField()),
                ('color', models.CharField(max_length=20)),
            ],
            options={
                'managed': False,
                'db_table': 'projects_priority',
            },
        ),
        migrations.CreateModel(
            name='ProjectsProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.TextField(blank=True, null=True)),
                ('name', models.CharField(max_length=250)),
                ('slug', models.CharField(max_length=250, unique=True)),
                ('description', models.TextField()),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('total_milestones', models.IntegerField(blank=True, null=True)),
                ('total_story_points', models.FloatField(blank=True, null=True)),
                ('is_backlog_activated', models.BooleanField()),
                ('is_kanban_activated', models.BooleanField()),
                ('is_wiki_activated', models.BooleanField()),
                ('is_issues_activated', models.BooleanField()),
                ('videoconferences', models.CharField(blank=True, max_length=250, null=True)),
                ('videoconferences_extra_data', models.CharField(blank=True, max_length=250, null=True)),
                ('anon_permissions', models.TextField(blank=True, null=True)),
                ('public_permissions', models.TextField(blank=True, null=True)),
                ('is_private', models.BooleanField()),
                ('tags_colors', models.TextField(blank=True, null=True)),
                ('issues_csv_uuid', models.CharField(blank=True, max_length=32, null=True)),
                ('tasks_csv_uuid', models.CharField(blank=True, max_length=32, null=True)),
                ('userstories_csv_uuid', models.CharField(blank=True, max_length=32, null=True)),
                ('is_featured', models.BooleanField()),
                ('is_looking_for_people', models.BooleanField()),
                ('total_activity', models.IntegerField()),
                ('total_activity_last_month', models.IntegerField()),
                ('total_activity_last_week', models.IntegerField()),
                ('total_activity_last_year', models.IntegerField()),
                ('total_fans', models.IntegerField()),
                ('total_fans_last_month', models.IntegerField()),
                ('total_fans_last_week', models.IntegerField()),
                ('total_fans_last_year', models.IntegerField()),
                ('totals_updated_datetime', models.DateTimeField()),
                ('logo', models.CharField(blank=True, max_length=500, null=True)),
                ('looking_for_people_note', models.TextField()),
                ('blocked_code', models.CharField(blank=True, max_length=255, null=True)),
                ('transfer_token', models.CharField(blank=True, max_length=255, null=True)),
                ('is_epics_activated', models.BooleanField()),
                ('epics_csv_uuid', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'projects_project',
            },
        ),
        migrations.CreateModel(
            name='ProjectsProjectmodulesconfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'projects_projectmodulesconfig',
            },
        ),
        migrations.CreateModel(
            name='ProjectsProjecttemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('slug', models.CharField(max_length=250, unique=True)),
                ('description', models.TextField()),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('default_owner_role', models.CharField(max_length=50)),
                ('is_backlog_activated', models.BooleanField()),
                ('is_kanban_activated', models.BooleanField()),
                ('is_wiki_activated', models.BooleanField()),
                ('is_issues_activated', models.BooleanField()),
                ('videoconferences', models.CharField(blank=True, max_length=250, null=True)),
                ('videoconferences_extra_data', models.CharField(blank=True, max_length=250, null=True)),
                ('default_options', models.TextField(blank=True, null=True)),
                ('us_statuses', models.TextField(blank=True, null=True)),
                ('points', models.TextField(blank=True, null=True)),
                ('task_statuses', models.TextField(blank=True, null=True)),
                ('issue_statuses', models.TextField(blank=True, null=True)),
                ('issue_types', models.TextField(blank=True, null=True)),
                ('priorities', models.TextField(blank=True, null=True)),
                ('severities', models.TextField(blank=True, null=True)),
                ('roles', models.TextField(blank=True, null=True)),
                ('order', models.BigIntegerField()),
                ('epic_statuses', models.TextField(blank=True, null=True)),
                ('is_epics_activated', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'projects_projecttemplate',
            },
        ),
        migrations.CreateModel(
            name='ProjectsSeverity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('order', models.IntegerField()),
                ('color', models.CharField(max_length=20)),
            ],
            options={
                'managed': False,
                'db_table': 'projects_severity',
            },
        ),
        migrations.CreateModel(
            name='ProjectsTaskstatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('order', models.IntegerField()),
                ('is_closed', models.BooleanField()),
                ('color', models.CharField(max_length=20)),
                ('slug', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'projects_taskstatus',
            },
        ),
        migrations.CreateModel(
            name='ProjectsUserstorystatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('order', models.IntegerField()),
                ('is_closed', models.BooleanField()),
                ('color', models.CharField(max_length=20)),
                ('wip_limit', models.IntegerField(blank=True, null=True)),
                ('slug', models.CharField(max_length=255)),
                ('is_archived', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'projects_userstorystatus',
            },
        ),
        migrations.CreateModel(
            name='ReferencesReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField()),
                ('ref', models.BigIntegerField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'references_reference',
            },
        ),
        migrations.CreateModel(
            name='TasksTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('is_blocked', models.BooleanField()),
                ('blocked_note', models.TextField()),
                ('ref', models.BigIntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('finished_date', models.DateTimeField(blank=True, null=True)),
                ('subject', models.TextField()),
                ('description', models.TextField()),
                ('is_iocaine', models.BooleanField()),
                ('taskboard_order', models.BigIntegerField()),
                ('us_order', models.BigIntegerField()),
                ('external_reference', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'tasks_task',
            },
        ),
        migrations.CreateModel(
            name='TimelineTimeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField()),
                ('namespace', models.CharField(max_length=250)),
                ('event_type', models.CharField(max_length=250)),
                ('data', models.TextField()),
                ('created', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'timeline_timeline',
            },
        ),
        migrations.CreateModel(
            name='UsersAuthdata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=50)),
                ('value', models.CharField(max_length=300)),
                ('extra', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'users_authdata',
            },
        ),
        migrations.CreateModel(
            name='UsersRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.CharField(max_length=250)),
                ('permissions', models.TextField(blank=True, null=True)),
                ('order', models.IntegerField()),
                ('computable', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'users_role',
            },
        ),
        migrations.CreateModel(
            name='UserstorageStorageentry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('key', models.CharField(max_length=255)),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'userstorage_storageentry',
            },
        ),
        migrations.CreateModel(
            name='UserstoriesRolepoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'userstories_rolepoints',
            },
        ),
        migrations.CreateModel(
            name='UserstoriesUserstory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField()),
                ('is_blocked', models.BooleanField()),
                ('blocked_note', models.TextField()),
                ('ref', models.BigIntegerField(blank=True, null=True)),
                ('is_closed', models.BooleanField()),
                ('backlog_order', models.BigIntegerField()),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('finish_date', models.DateTimeField(blank=True, null=True)),
                ('subject', models.TextField()),
                ('description', models.TextField()),
                ('client_requirement', models.BooleanField()),
                ('team_requirement', models.BooleanField()),
                ('sprint_order', models.BigIntegerField()),
                ('kanban_order', models.BigIntegerField()),
                ('external_reference', models.TextField(blank=True, null=True)),
                ('tribe_gig', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'userstories_userstory',
            },
        ),
        migrations.CreateModel(
            name='UsersUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=255, unique=True)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField()),
                ('full_name', models.CharField(max_length=256)),
                ('color', models.CharField(max_length=9)),
                ('bio', models.TextField()),
                ('photo', models.CharField(blank=True, max_length=500, null=True)),
                ('date_joined', models.DateTimeField()),
                ('lang', models.CharField(blank=True, max_length=20, null=True)),
                ('timezone', models.CharField(blank=True, max_length=20, null=True)),
                ('colorize_tags', models.BooleanField()),
                ('token', models.CharField(blank=True, max_length=200, null=True)),
                ('email_token', models.CharField(blank=True, max_length=200, null=True)),
                ('new_email', models.CharField(blank=True, max_length=254, null=True)),
                ('is_system', models.BooleanField()),
                ('theme', models.CharField(blank=True, max_length=100, null=True)),
                ('max_private_projects', models.IntegerField(blank=True, null=True)),
                ('max_public_projects', models.IntegerField(blank=True, null=True)),
                ('max_memberships_private_projects', models.IntegerField(blank=True, null=True)),
                ('max_memberships_public_projects', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'users_user',
            },
        ),
        migrations.CreateModel(
            name='VotesVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField()),
                ('created_date', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'votes_vote',
            },
        ),
        migrations.CreateModel(
            name='VotesVotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField()),
                ('count', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'votes_votes',
            },
        ),
        migrations.CreateModel(
            name='WebhooksWebhook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=200)),
                ('key', models.TextField()),
                ('name', models.CharField(max_length=250)),
            ],
            options={
                'managed': False,
                'db_table': 'webhooks_webhook',
            },
        ),
        migrations.CreateModel(
            name='WebhooksWebhooklog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=200)),
                ('status', models.IntegerField()),
                ('request_data', models.TextField()),
                ('response_data', models.TextField()),
                ('created', models.DateTimeField()),
                ('duration', models.FloatField()),
                ('request_headers', models.TextField()),
                ('response_headers', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'webhooks_webhooklog',
            },
        ),
        migrations.CreateModel(
            name='WikiWikilink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('href', models.CharField(max_length=500)),
                ('order', models.BigIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'wiki_wikilink',
            },
        ),
        migrations.CreateModel(
            name='WikiWikipage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField()),
                ('slug', models.CharField(max_length=500)),
                ('content', models.TextField()),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'wiki_wikipage',
            },
        ),
    ]
